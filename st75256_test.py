import time
from machine import Pin, I2C,SPI
#iic=I2C(1) #用于pyb或者stm32
iic=I2C(1,sda=Pin(33,Pin.PULL_UP),scl=Pin(32,Pin.PULL_UP), freq=400000)
#spi=SPI(1, 20000000, sck=Pin(32), mosi=Pin(33), miso=Pin(34))
from ST75256_Mono import ST75256_I2C
#from ST75256_Mono import ST75256_SPI
#iic模式需要确保cs拉低，正常状态应该硬件拉低
cs=Pin(26,Pin.OUT)
cs(0)
oled = ST75256_I2C(256, 96, iic, res=Pin(25), rot=0)
#oled = ST75256_SPI(256, 96, spi, res=Pin(25), cs=Pin(26), dc=Pin(27), rot=2)
oled.contrast(255)#可用取值范围0-511，实际有用的区间大约在245-280区间，过小是全白，过大就是全黑
oled.font_load("GB2312-32.fon")
oled.invert(0)
if 1:#改成0则跳过字体演示
    oled.fill(0)
    oled.font_set(0x22,0,1,0)
    oled.text("MicroPython中文显示",0,0,3)
    oled.text("支持的字体演示",0,36,3)
    oled.show()
    time.sleep(3)
    #字体参数是font_set的第一个参数，高4位指定英文字体，低四位指定字体的大小取值参数都是1-4
    oled.fill(0)
    oled.font_set(0x00,0,1,0)
    oled.text("MicroPython 中文显示",0,0,3)
    oled.font_set(0x11,0,1,0)
    oled.text("MicroPython 中文显示",0,10,3)
    oled.font_set(0x21,0,1,0)
    oled.text("MicroPython 中文显示",0,24,3)
    oled.font_set(0x31,0,1,0)
    oled.text("MicroPython 中文显示",0,38,3)
    oled.font_set(0x41,0,1,0)
    oled.text("MicroPython 中文显示",0,52,3)
    oled.show()
    time.sleep(3)
    oled.fill(0)
    oled.font_set(0x12,0,1,0)
    oled.text("MicroPython 中文显示",0,0,1)
    oled.font_set(0x22,0,1,0)
    oled.text("MicroPython 中文显示",0,18,1)
    oled.font_set(0x32,0,1,0)
    oled.text("MicroPython 中文显示",0,36,1)
    oled.font_set(0x42,0,1,0)
    oled.text("MicroPython 中文显示",0,54,1)
    oled.show()
    time.sleep(3)
    oled.fill(0)
    oled.font_set(0x13,0,1,0)
    oled.text("MicroPython 中文显示",0,0,1)
    oled.font_set(0x23,0,1,0)
    oled.text("MicroPython 中文显示",0,26,1)
    oled.show()
    time.sleep(3)
    oled.fill(0)
    oled.font_set(0x33,0,1,0)
    oled.text("MicroPython 中文显示",0,0,1)
    oled.font_set(0x43,0,1,0)
    oled.text("MicroPython 中文显示",0,26,1)
    oled.show()
    time.sleep(3)
    oled.fill(0)
    oled.font_set(0x14,0,1,0)
    oled.text("MicroPython 中文显示",0,0,1)
    oled.font_set(0x24,0,1,0)
    oled.text("MicroPython 中文显示",0,36,1)
    oled.show()
    time.sleep(3)
    oled.fill(0)
    oled.font_set(0x34,0,1,0)
    oled.text("MicroPython 中文显示",0,0,1)
    oled.font_set(0x44,0,1,0)
    oled.text("MicroPython 中文显示",0,36,1)
    oled.show()
    time.sleep(3)
if 1:#字体旋转演示，写0跳过
    oled.fill(0)
    oled.font_set(0x22,0,1,0)
    oled.text("MicroPython中文显示",0,0,1)
    oled.text("文字旋转演示",0,36,1)
    oled.show()
    time.sleep(3)
    #字体显示方向的旋转是font_set的第二个参数0-3分别对应中文的四个显示方向，
    #主要用于中文显示，英文显示很不美观
    oled.fill(0)
    oled.font_set(0x13,0,1,0)
    oled.text("中文显示旋转方向",0,0,1)
    oled.font_set(0x13,1,1,0)
    oled.text("中文显示旋转方向",0,24,1)
    oled.font_set(0x13,2,1,0)
    oled.text("中文显示旋转方向",0,48,1)
    oled.font_set(0x13,3,1,0)
    oled.text("中文显示旋转方向",0,72,1)
    oled.show()
    time.sleep(3)
if 1:#字体缩放，写0跳过
    oled.fill(0)
    oled.font_set(0x22,0,1,0)
    oled.text("MicroPython中文显示",0,0,1)
    oled.text("文字放大演示",0,36,1)
    oled.show()
    time.sleep(3)
    #字体显示方向的旋转是font_set的第三个参数1-4分别对应四级放大效果
    oled.fill(0)
    oled.font_set(0x12,0,1,0)
    oled.text("中文显示字体放大",0,0,1)
    oled.font_set(0x12,0,2,0)
    oled.text("中文显示字体放大",0,16,1)
    oled.font_set(0x12,0,3,0)
    oled.text("中文字体放大",0,48,1)
    oled.show()
    time.sleep(3)    
    oled.fill(0)
    oled.font_set(0x12,0,4,0)
    oled.text("字体放大",0,0,1)
    oled.show()
    time.sleep(3)
if 1:#字体反白，写0跳过
    oled.fill(0)
    oled.font_set(0x22,0,1,0)
    oled.text("MicroPython中文显示",0,0,1)
    oled.text("文字反白演示",0,36,1)
    oled.show()
    time.sleep(3)
    #字体显示方向的旋转是font_set的第四个参数指定是否反白，0正常，非0反白
    oled.fill(0)
    oled.font_set(0x14,0,1,0)
    oled.text("中文没有反白",0,0,1)
    oled.font_set(0x14,0,1,1)
    oled.text("中文反白显示",0,48,1)
    oled.show()
    time.sleep(3)
if 0:#字体背景，写0跳过
    oled.fill(0)
    oled.font_set(0x22,0,1,0)
    oled.text("MicroPython中文显示",0,0,1)
    oled.text("文字背景演示",0,36,1)
    oled.show()
    time.sleep(3)
    #字体显示方向的旋转是font_set的第五个参数指定背景色，
    #如果不指定或者为0则背景不显示就是透明，该参数在单色屏上无意义
    oled.fill(0)
    oled.show_bmp("logo-1.bmp",0,0)
    oled.show_bmp("logo-1.bmp",64,24)
    oled.show_bmp("logo-1.bmp",128,48)
    oled.show_bmp("logo-1.bmp",192,72)
    oled.font_set(0x13,0,1,0,0)
    oled.text("中文背景透明显示",0,0,1)
    oled.font_set(0x13,0,1,0,1)
    oled.text("中文背景覆盖显示",0,32,1)
    oled.show()
    time.sleep(3)
if 1:#速度测试
    oled.fill(0)
    oled.font_set(0x22,0,1,0)
    oled.text("MicroPython中文显示",0,0,1)
    oled.text("显示速度演示",0,36,1)
    oled.show()
    time.sleep(3)
    t0=time.ticks_us()
    for count in range(100):
        oled.fill(0)
        oled.font_set(0x11,0,1,0)
        oled.text("MicroPython中文显示=%d"%count,0,0,1)
        oled.font_set(0x12,0,1,0)
        oled.text("MicroPython中文显示=%d"%count,0,16,1)
        oled.font_set(0x13,0,1,0)
        oled.text("Mpy中文显示=%d"%count,0,36,1)
        oled.font_set(0x14,0,1,0)
        oled.text("中文显示=%d"%count,0,64,1)
        oled.show()
    t1=time.ticks_us()
    tt=time.ticks_diff(t1,t0)
    farme=1000000/tt*100
    oled.fill(0)
    oled.font_set(0x22,0,1,0)
    oled.text("MicroPython中文显示",0,0,1)
    oled.text("测试帧率%6.2f"%farme,0,36,1)
    oled.show()
    time.sleep(5)
if 1:#图片显示演示
    oled.fill(0)
    oled.font_set(0x22,0,1,0)
    oled.text("MicroPython中文显示",0,0,1)
    oled.text("图片演示",0,36,1)
    oled.show()
    time.sleep(3)
    oled.invert(1)
    for count in range(256+1):
        oled.fill(1)
        oled.show_bmp("logo-1.bmp",count,count%96)
        oled.show()
    oled.invert(0)
    for count in range(256+1):
        oled.fill(0)
        oled.show_bmp("logo-1.bmp",count,count%96)
        oled.show()
    for count in range(97):
        oled.fill(0)
        oled.show_bmp("logo-1.bmp",32,count)
        oled.show_bmp("logo-1.bmp",160,count)
        oled.show()

